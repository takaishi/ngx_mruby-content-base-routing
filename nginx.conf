user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid       /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
  upstream dynamic {
    server 127.0.0.1:80;
  }

  upstream dynamic_production {
    server production:8000;
  }

  upstream dynamic_staging {
    server staging:8000;
  }

  server {
    listen       80;

    location / {
      mruby_rewrite_handler_code '
        Server = get_server_class
        u          = Nginx::Upstream.new "dynamic"
        production = Nginx::Upstream.new "dynamic_production"
        staging    = Nginx::Upstream.new "dynamic_staging"

        hin = Nginx::Headers_in.new

        if hin["X-Environment"] == "STAGING"
          u.server = staging.server
        else
          u.server = production.server
        end
        Nginx.return Nginx::DECLINED
      ';
      proxy_pass http://dynamic/;
    }
  }
}

